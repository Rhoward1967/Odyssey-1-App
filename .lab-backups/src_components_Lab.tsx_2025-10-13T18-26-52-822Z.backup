{
  "originalPath": "src\\components\\Lab.tsx",
  "timestamp": "2025-10-13T18:26:52.822Z",
  "hash": "47588e664405422dcbf18bf3502e548e9712aa42652ba50517a10004dfd35cf6",
  "size": 2419,
  "content": "import React, { useEffect, useState } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\nimport { Badge } from './ui/badge';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\n\r\ninterface Agent {\r\n  id: string;\r\n  task: string;\r\n  status: 'healthy' | 'unhealthy' | 'healing';\r\n  errorLog: string[];\r\n  codebase: string;\r\n}\r\n\r\nexport const Lab: React.FC = () => {\r\n  const [agents, setAgents] = useState<Agent[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAgents = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('agents')\r\n        .select('*');\r\n      if (error) {\r\n        setAgents([]);\r\n      } else {\r\n        setAgents(data || []);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchAgents();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          ğŸ§ª Self-Healing Laboratory\r\n          <Badge variant=\"outline\">{agents.length} Agents Monitored</Badge>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"grid gap-4\">\r\n          {loading ? (\r\n            <div className=\"text-center py-8 text-gray-500\">Loading agent status...</div>\r\n          ) : agents.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500\">No agents currently monitored</div>\r\n          ) : (\r\n            agents.map((agent, index) => (\r\n              <div key={agent.id || index} className=\"border rounded-lg p-4 space-y-3\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h4 className=\"font-medium\">Task: {agent.task}</h4>\r\n                  <Badge variant={agent.status === 'healthy' ? 'default' : agent.status === 'healing' ? 'secondary' : 'destructive'}>\r\n                    {agent.status}\r\n                  </Badge>\r\n                </div>\r\n                {agent.errorLog && agent.errorLog.length > 0 && (\r\n                  <div className=\"text-sm text-red-600 bg-red-50 p-2 rounded\">\r\n                    Errors: {agent.errorLog.join(', ')}\r\n                  </div>\r\n                )}\r\n                <div className=\"text-xs text-gray-500\">Codebase: {agent.codebase}</div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};"
}