{
  "originalPath": "src\\components\\LeadTrackingSystem.tsx",
  "timestamp": "2025-10-13T18:26:50.876Z",
  "hash": "bc962736faeceb24172eb63c12f95914ae4bd1195f35f700a3d085d43211aea8",
  "size": 7974,
  "content": "import { Building, Calendar, Mail, Phone, TrendingUp, Users } from 'lucide-react';\r\nimport { useState } from 'react';\r\nimport { Badge } from './ui/badge';\r\nimport { Button } from './ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport { Input } from './ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\r\n\r\ninterface Lead {\r\n  id: string;\r\n  name: string;\r\n  company: string;\r\n  email: string;\r\n  phone: string;\r\n  status: 'new' | 'contacted' | 'qualified' | 'proposal' | 'closed-won' | 'closed-lost';\r\n  source: string;\r\n  value: number;\r\n  dateAdded: string;\r\n  lastContact: string;\r\n}\r\n\r\n\r\n\r\nimport { useEffect } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function LeadTrackingSystem() {\r\n  const [leads, setLeads] = useState<Lead[]>([]);\r\n  const [filterStatus, setFilterStatus] = useState<string>('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadLeads();\r\n  }, []);\r\n\r\n  const loadLeads = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('leads')\r\n        .select('*')\r\n        .order('dateAdded', { ascending: false });\r\n      if (error) throw error;\r\n      setLeads(data || []);\r\n    } catch (error) {\r\n      console.error('Failed to load leads:', error);\r\n      setLeads([]);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      'new': 'bg-blue-100 text-blue-800',\r\n      'contacted': 'bg-yellow-100 text-yellow-800',\r\n      'qualified': 'bg-green-100 text-green-800',\r\n      'proposal': 'bg-purple-100 text-purple-800',\r\n      'closed-won': 'bg-emerald-100 text-emerald-800',\r\n      'closed-lost': 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const filteredLeads = leads.filter(lead => {\r\n    const matchesStatus = filterStatus === 'all' || lead.status === filterStatus;\r\n    const matchesSearch = lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         lead.company.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesStatus && matchesSearch;\r\n  });\r\n\r\n  const totalValue = leads.reduce((sum, lead) => sum + lead.value, 0);\r\n  const qualifiedLeads = leads.filter(lead => ['qualified', 'proposal'].includes(lead.status)).length;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Lead Tracking System</h1>\r\n          <p className=\"text-gray-600 mt-2\">Manage and track your sales pipeline</p>\r\n        </div>\r\n        <Button className=\"bg-blue-600 hover:bg-blue-700\">\r\n          <Users className=\"w-4 h-4 mr-2\" />\r\n          Add New Lead\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Leads</p>\r\n                <p className=\"text-3xl font-bold text-gray-900\">{leads.length}</p>\r\n              </div>\r\n              <Users className=\"w-8 h-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Qualified</p>\r\n                <p className=\"text-3xl font-bold text-green-600\">{qualifiedLeads}</p>\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-green-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Pipeline Value</p>\r\n                <p className=\"text-3xl font-bold text-purple-600\">${totalValue.toLocaleString()}</p>\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-purple-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Conversion Rate</p>\r\n                <p className=\"text-3xl font-bold text-orange-600\">24%</p>\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-orange-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n        <Input\r\n          placeholder=\"Search leads...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"max-w-sm\"\r\n        />\r\n        <Select value={filterStatus} onValueChange={setFilterStatus}>\r\n          <SelectTrigger className=\"max-w-sm\">\r\n            <SelectValue placeholder=\"Filter by status\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"all\">All Statuses</SelectItem>\r\n            <SelectItem value=\"new\">New</SelectItem>\r\n            <SelectItem value=\"contacted\">Contacted</SelectItem>\r\n            <SelectItem value=\"qualified\">Qualified</SelectItem>\r\n            <SelectItem value=\"proposal\">Proposal</SelectItem>\r\n            <SelectItem value=\"closed-won\">Closed Won</SelectItem>\r\n            <SelectItem value=\"closed-lost\">Closed Lost</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      {/* Leads Table */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Lead Pipeline</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            {filteredLeads.map((lead) => (\r\n              <div key={lead.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <div>\r\n                      <h3 className=\"font-semibold text-gray-900\">{lead.name}</h3>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Building className=\"w-4 h-4\" />\r\n                        {lead.company}\r\n                      </div>\r\n                    </div>\r\n                    <Badge className={getStatusColor(lead.status)}>\r\n                      {lead.status.replace('-', ' ').toUpperCase()}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-600\">\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Mail className=\"w-4 h-4\" />\r\n                      {lead.email}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Phone className=\"w-4 h-4\" />\r\n                      {lead.phone}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Calendar className=\"w-4 h-4\" />\r\n                      Last contact: {lead.lastContact}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-lg font-semibold text-gray-900\">${lead.value.toLocaleString()}</p>\r\n                  <p className=\"text-sm text-gray-600\">Source: {lead.source}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"
}