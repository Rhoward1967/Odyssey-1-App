{
  "originalPath": "src\\components\\IndustryDemo.tsx",
  "timestamp": "2025-10-13T18:26:54.420Z",
  "hash": "33d9fadcddcbecf879801e2417a17b8f1d7c028210c1086e7bbadd3aa24e1481",
  "size": 2881,
  "content": "import { Card, CardContent } from '@/components/ui/card';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { supabase } from '@/lib/supabase';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface IndustryDemoProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  industry: {\r\n    name: string;\r\n    icon: string;\r\n    revenue: string;\r\n    roi: string;\r\n    clients: string;\r\n    growth: string;\r\n  };\r\n}\r\n\r\n\r\nexport const IndustryDemo: React.FC<IndustryDemoProps> = ({ isOpen, onClose, industry }) => {\r\n  const [features, setFeatures] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchFeatures = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('industry_features')\r\n          .select('feature')\r\n          .eq('industry', industry.name)\r\n          .order('feature');\r\n        if (error) throw error;\r\n        setFeatures((data || []).map((row: any) => row.feature));\r\n      } catch {\r\n        setFeatures([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (isOpen && industry?.name) fetchFeatures();\r\n  }, [isOpen, industry]);\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-2xl bg-slate-900 border-purple-500/30\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-2xl text-white flex items-center\">\r\n            <span className=\"text-3xl mr-3\">{industry.icon}</span>\r\n            How ODYSSEY-1 Works for {industry.name}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-6\">\r\n          <Card className=\"bg-gradient-to-r from-purple-600/20 to-blue-600/20 border-purple-500/30\">\r\n            <CardContent className=\"p-6\">\r\n              <h3 className=\"text-xl font-bold text-white mb-4\">Your Industry-Specific AI Features</h3>\r\n              {loading ? (\r\n                <div className=\"text-gray-400\">Loading features...</div>\r\n              ) : features.length > 0 ? (\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  {features.map((feature, index) => (\r\n                    <div key={index} className=\"flex items-center text-gray-300\">\r\n                      <CheckCircle className=\"w-5 h-5 text-green-400 mr-2\" />\r\n                      {feature}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-gray-400\">No features found for this industry.</div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          {/* Optionally, fetch and display dynamic cards for ROI, Demo, Case Study if available from backend */}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};"
}