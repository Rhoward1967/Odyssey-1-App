{
  "originalPath": "src\\components\\ResearchTemplates.tsx",
  "timestamp": "2025-09-24T20:24:34.577Z",
  "hash": "a88c2fcce6c558ea3b1f0806678c2b4411dc17230e8cf268a3518b33a2620b4d",
  "size": 6059,
  "content": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { FileText, Download, Plus, Star, Clock, Users } from 'lucide-react';\r\n\r\ninterface ResearchTemplate {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  sections: string[];\r\n  estimatedTime: string;\r\n  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';\r\n  popularity: number;\r\n}\r\n\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface ResearchTemplatesProps {\r\n  onTemplateSelect: (template: ResearchTemplate) => void;\r\n}\r\n\r\n\r\n  const [templates, setTemplates] = useState<ResearchTemplate[]>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTemplates = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('research_templates')\r\n        .select('*');\r\n      setTemplates(data || []);\r\n      setLoading(false);\r\n    };\r\n    fetchTemplates();\r\n  }, []);\r\n\r\n  const categories = ['all', ...Array.from(new Set(templates.map(t => t.category)))];\r\n\r\n  const filteredTemplates = templates.filter(template => {\r\n    const matchesCategory = selectedCategory === 'all' || template.category === selectedCategory;\r\n    const matchesSearch = template.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         template.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  const getDifficultyColor = (difficulty: string) => {\r\n    switch (difficulty) {\r\n      case 'Beginner': return 'bg-green-100 text-green-800';\r\n      case 'Intermediate': return 'bg-yellow-100 text-yellow-800';\r\n      case 'Advanced': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <FileText className=\"w-5 h-5\" />\r\n          Research Templates\r\n        </CardTitle>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search templates...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"px-3 py-2 border rounded-md text-sm\"\r\n        />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Tabs value={selectedCategory} onValueChange={setSelectedCategory}>\r\n          <TabsList className=\"grid grid-cols-4 mb-4\">\r\n            {categories.map(category => (\r\n              <TabsTrigger key={category} value={category} className=\"text-xs\">\r\n                {category === 'all' ? 'All' : category}\r\n              </TabsTrigger>\r\n            ))}\r\n          </TabsList>\r\n\r\n          <div className=\"grid gap-4\">\r\n            {loading ? (\r\n              <div className=\"text-center py-8 text-gray-500\">Loading templates...</div>\r\n            ) : filteredTemplates.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500\">No templates found</div>\r\n            ) : filteredTemplates.map(template => (\r\n              <Card key={template.id} className=\"hover:shadow-md transition-shadow\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"flex justify-between items-start mb-3\">\r\n                    <div>\r\n                      <h3 className=\"font-semibold text-lg\">{template.title}</h3>\r\n                      <p className=\"text-sm text-gray-600\">{template.description}</p>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-1 text-yellow-500\">\r\n                      <Star className=\"w-4 h-4 fill-current\" />\r\n                      <span className=\"text-xs\">{template.popularity}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap gap-2 mb-3\">\r\n                    <Badge variant=\"secondary\">{template.category}</Badge>\r\n                    <Badge className={getDifficultyColor(template.difficulty)}>\r\n                      {template.difficulty}\r\n                    </Badge>\r\n                    <Badge variant=\"outline\" className=\"flex items-center gap-1\">\r\n                      <Clock className=\"w-3 h-3\" />\r\n                      {template.estimatedTime}\r\n                    </Badge>\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <p className=\"text-sm font-medium mb-1\">Template Sections:</p>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {template.sections.slice(0, 4).map((section, index) => (\r\n                        <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                          {section}\r\n                        </Badge>\r\n                      ))}\r\n                      {template.sections.length > 4 && (\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          +{template.sections.length - 4} more\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-2\">\r\n                    <Button \r\n                      onClick={() => onTemplateSelect(template)}\r\n                      className=\"flex-1\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4 mr-2\" />\r\n                      Use Template\r\n                    </Button>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <Download className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </Tabs>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n"
}