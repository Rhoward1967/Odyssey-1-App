{
  "originalPath": "src\\services\\calendarService.ts",
  "timestamp": "2025-10-05T21:20:04.156Z",
  "hash": "3062b4507742437c8eeb33d82bca565c0b0b27825b390b943a7e783b610bf705",
  "size": 1667,
  "content": "// src/services/calendarService.ts\r\nimport { supabase } from '@/lib/supabase';\r\nimport { Calendar, CalendarEvent } from '@/types/calendar';\r\n\r\nexport async function getCalendars(): Promise<Calendar[]> {\r\n  const { data, error } = await supabase.from('calendars').select('*');\r\n  if (error) throw error;\r\n  return data || [];\r\n}\r\n\r\nexport async function createCalendar(\r\n  calendar: Partial<Calendar>\r\n): Promise<Calendar> {\r\n  const { data, error } = await supabase\r\n    .from('calendars')\r\n    .insert([calendar])\r\n    .select()\r\n    .single();\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport async function getCalendarEvents(\r\n  calendarId: string\r\n): Promise<CalendarEvent[]> {\r\n  const { data, error } = await supabase\r\n    .from('calendar_events')\r\n    .select('*')\r\n    .eq('calendarId', calendarId);\r\n  if (error) throw error;\r\n  return data || [];\r\n}\r\n\r\nexport async function createCalendarEvent(\r\n  event: Partial<CalendarEvent>\r\n): Promise<CalendarEvent> {\r\n  const { data, error } = await supabase\r\n    .from('calendar_events')\r\n    .insert([event])\r\n    .select()\r\n    .single();\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport async function updateCalendarEvent(\r\n  id: string,\r\n  updates: Partial<CalendarEvent>\r\n): Promise<CalendarEvent> {\r\n  const { data, error } = await supabase\r\n    .from('calendar_events')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport async function deleteCalendarEvent(id: string): Promise<void> {\r\n  const { error } = await supabase\r\n    .from('calendar_events')\r\n    .delete()\r\n    .eq('id', id);\r\n  if (error) throw error;\r\n}\r\n"
}