{
  "originalPath": "src\\components\\AICalculator.tsx",
  "timestamp": "2025-09-24T19:32:36.075Z",
  "hash": "a9bf07ab744452901b69408c12cf76a0bbc29825f401c8fc81ffec4e9db2e45f",
  "size": 1830,
  "content": "import React, { useState } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\n// Initialize Supabase client (ensure your .env.local file has these)\r\nconst supabase = createClient(\r\n  import.meta.env.VITE_SUPABASE_URL!,\r\n  import.meta.env.VITE_SUPABASE_ANON_KEY!\r\n);\r\n\r\nconst AICalculator: React.FC = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [result, setResult] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return; // Prevent empty submissions\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setResult(null);\r\n\r\n    try {\r\n      // CORRECTED: Sending the body with a 'query' property\r\n      const { data, error } = await supabase.functions.invoke(\"ai-calculator\", {\r\n        body: { query: input },\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      // CORRECTED: Looking for the 'answer' property in the response\r\n      setResult(data?.answer ?? \"No valid answer returned from the AI.\");\r\n\r\n    } catch (err: any) {\r\n      setError(err.message || \"An unknown error occurred while contacting the AI.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        placeholder=\"Ask a financial or calculation question...\"\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Calculating...\" : \"Calculate\"}\r\n      </button>\r\n      {error && <div style={{ color: \"red\" }}>Error: {error}</div>}\r\n      {result && <div>AI Result: {result}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AICalculator;"
}