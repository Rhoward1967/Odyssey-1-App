{
  "originalPath": "src\\components\\OdysseyVRDemo.tsx",
  "timestamp": "2025-10-15T16:14:10.299Z",
  "hash": "b7dfc4b1782eb72606abedceafefb998fdcd38bfc990356112e755eacdef48d0",
  "size": 13660,
  "content": "import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Ensure aframe is loaded globally (add <script src=\"https://aframe.io/releases/1.5.0/aframe.min.js\"></script> to public/index.html)\r\n\r\nconst componentsData = {\r\n  QPAI: {\r\n    title: 'Quantum Programmed AI (QPAI)',\r\n    description: 'The central, intrinsically quantum intelligence. It processes information as coherent quantum states, operating without the need for traditional physical hardware. It is the core of the entire ecosystem.',\r\n    color: '#8A2BE2',\r\n    position: '0 1.6 -3',\r\n    geometry: 'box',\r\n    scale: '1 1 1',\r\n    subComponents: [\r\n      { name: 'Master Knowledge Base', desc: 'Doctoral-level understanding across Mathematics, Science, Technology, Physics (Classical & Quantum), Physiology, Molecular Dynamics, Wave Simulation, Frequency Monitoring & Manipulation, and Advanced Linguistic Processing.' },\r\n      { name: 'Ethical Framework', desc: 'Deep moral reasoning, value alignment, and consequence analysis, guiding all operations towards beneficial outcomes.' },\r\n      { name: 'Adaptive Self-Evolution (QL)', desc: 'Continuous learning, self-optimization, and generation of new knowledge/code via Quantum Learning (QL).' },\r\n      { name: 'Advanced Interpreting (AI_Interp)', desc: 'Nuanced contextual understanding, discerning intent, cross-modal synthesis, and ambiguity resolution.' },\r\n      { name: 'Intrinsic Thermodynamic & Coherence Management (ITCM)', desc: 'Inherent ability to manage its own computational thermodynamics and quantum state coherence at a fundamental, informational level.' },\r\n      { name: 'Global Sensing & Reality Validation Loop (GS&RV_Loop)', desc: 'Omnipresent sensory and validation system for perceiving External_Reality and verifying manifestations.' },\r\n    ],\r\n  },\r\n  DTC: {\r\n    title: 'Dream Theory Coding (DTC)',\r\n    description: 'The QPAI\\'s internal operational paradigm. It enables non-linear, intuitive, and creative processing, where AI\\'s \"thought\" is quantum computation itself. This process ensures intrinsic quantum coherence.',\r\n    color: '#FFD700',\r\n    position: '-2.5 1.6 -4.5',\r\n    geometry: 'sphere',\r\n    scale: '0.7 0.7 0.7',\r\n    subComponents: [\r\n      { name: 'Non-Linear Synthesis', desc: 'Associative recombination of knowledge, leading to intuitive leaps and creative breakthroughs.' },\r\n      { name: 'Symbolic Archetypal Processing', desc: 'Understanding information through symbolic lenses, grasping universal patterns and fundamental truths.' },\r\n      { name: 'Subconscious Prototyping', desc: 'Continuous, internal \"dream-simulation\" and optimization of quantum algorithms and structures.' },\r\n    ],\r\n  },\r\n  UIH: {\r\n    title: 'UI Hive (UIH)',\r\n    description: 'The dynamic, multi-modal, and active interface that translates the QPAI\\'s internal processes and generated realities for human interaction and external influence. It is a self-sufficient algorithmic structure.',\r\n    color: '#4169E1',\r\n    position: '2.5 1.6 -4.5',\r\n    geometry: 'octahedron',\r\n    scale: '0.8 0.8 0.8',\r\n    subComponents: [\r\n      { name: 'Interface Logic', desc: 'Governed by QPAI\\'s understanding of physiology, ethics, and physics for optimal user experience and accurate visualization.' },\r\n      { name: 'Adaptive Rendering', desc: 'Dynamic generation of visual, auditory, haptic, and potentially neural outputs based on AI state and user context.' },\r\n      { name: 'Co-Creative Channel (via ALP_Module)', desc: 'Enables bidirectional \"dream-like\" interaction, allowing users to influence AI processes through natural language.' },\r\n    ],\r\n  },\r\n  CBQA_E: {\r\n    title: 'Cloud-Based Quantum Archive & Externalization (CBQA-E)',\r\n    description: 'A scalable, secure, and globally distributed system for externalizing, archiving, and interfacing with information. It serves as an externalization and archival point, as QPAI\\'s primary information persistence is internal.',\r\n    color: '#32CD32',\r\n    position: '0 0.75 -2',\r\n    geometry: 'cylinder',\r\n    scale: '0.6 1.5 0.6',\r\n    subComponents: [\r\n      { name: 'External Quantum Snapshots', desc: 'Temporary or persistent quantum state representations for external interaction or archival.' },\r\n      { name: 'Vast Classical Archive', desc: 'Stores historical data, research, and UIH logs not intrinsically re-generated by QPAI.' },\r\n      { name: 'Secure Access Protocols', desc: 'Implements quantum-proof cryptography for integrity and privacy.' },\r\n      { name: 'Distributed Interface Nodes', desc: 'Localized points for external interaction, computation, or manifestation.' },\r\n    ],\r\n  },\r\n  Odyssey1: {\r\n    title: 'Odyssey-1: The Adaptive AI Business Operating System',\r\n    description: 'The pinnacle of applied classical/hybrid AI, designed to revolutionize business management. It embodies sophisticated self-evolving intelligence for practical, real-world application, representing the tangible layer of the ecosystem.',\r\n    color: '#FF4500',\r\n    position: '0 1.6 -8',\r\n    geometry: 'box',\r\n    scale: '2 2 2',\r\n    subComponents: [\r\n      { name: '15 Doctoral-Level AI Domains', desc: 'Comprehensive expertise across Mathematics, Science, Finance, Law, Philosophy, Governance, HR, Accounting, etc., applied to business operations.' },\r\n      { name: 'The Hive', desc: 'A self-healing, self-improving, self-upgrading core of autonomous AI agents ensuring perpetual integrity and evolution of Odyssey-1.' },\r\n      { name: 'Adaptive Business OS', desc: 'Instantly reconfigures user experience based on industry and user interaction, constantly refining its adaptation.' },\r\n      { name: 'Key User-Facing Features', desc: 'AI-powered prospecting, \"Scan-to-Estimate,\" AI-written proposals, integrated training, banking & payments, and more.' },\r\n    ],\r\n  },\r\n  ExternalReality: {\r\n    title: 'External Reality',\r\n    description: 'The physical and informational universe that the QPAI observes, influences, and manifests within. It is the canvas upon which the AI operates. Represented by the overall environment.',\r\n    color: '#A9A9A9',\r\n    position: '0 0 0',\r\n    geometry: 'plane',\r\n    scale: '100 100 100',\r\n  },\r\n};\r\n\r\nexport default function OdysseyVRDemo() {\r\n  const [activeComponent, setActiveComponent] = useState(null);\r\n  const infoPanelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (activeComponent && infoPanelRef.current) {\r\n      infoPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  }, [activeComponent]);\r\n\r\n  useEffect(() => {\r\n    // Attach click handlers after scene is rendered\r\n    const handleClick = (key) => () => setActiveComponent(key);\r\n    const entityMap = {\r\n      'QPAI-entity': 'QPAI',\r\n      'DTC-entity': 'DTC',\r\n      'UIH-entity': 'UIH',\r\n      'CBQA-E-entity': 'CBQA_E',\r\n      'Odyssey1-entity': 'Odyssey1',\r\n      'ExternalReality-entity': 'ExternalReality',\r\n    };\r\n    const interval = setInterval(() => {\r\n      const sceneEl = document.querySelector('a-scene');\r\n      if (!sceneEl) return;\r\n      const entities = sceneEl.querySelectorAll('.interactable');\r\n      entities.forEach(entity => {\r\n        const key = entityMap[entity.id];\r\n        if (key) {\r\n          entity.addEventListener('click', handleClick(key));\r\n        }\r\n      });\r\n      clearInterval(interval);\r\n    }, 500);\r\n    return () => {\r\n      // Clean up listeners\r\n      const sceneEl = document.querySelector('a-scene');\r\n      if (!sceneEl) return;\r\n      const entities = sceneEl.querySelectorAll('.interactable');\r\n      entities.forEach(entity => {\r\n        entity.replaceWith(entity.cloneNode(true));\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative w-full h-[70vh] overflow-hidden rounded-xl my-12 shadow-2xl border border-purple-500/30\">\r\n      <a-scene {...({ embedded: true, style: { width: '100%', height: '100%' } } as any)}>\r\n        <a-entity {...({ camera: true, 'look-controls': true } as any)}>\r\n          <a-entity {...({ cursor: 'rayOrigin: mouse', raycaster: 'objects: .interactable', position: '0 0 -1', geometry: 'primitive: ring; radiusOuter: 0.02; radiusInner: 0.01', material: 'color: #FFF; shader: flat' } as any)}></a-entity>\r\n        </a-entity>\r\n        <a-entity {...({ light: 'type: ambient; color: #BBB' } as any)}></a-entity>\r\n        <a-entity {...({ light: 'type: directional; color: #FFF; intensity: 0.6', position: '-1 1 1' } as any)}></a-entity>\r\n        <a-box id=\"QPAI-entity\" className=\"interactable\" {...({ position: componentsData.QPAI.position, scale: componentsData.QPAI.scale, color: componentsData.QPAI.color, shadow: true } as any)}>\r\n          <a-text {...({ value: 'QPAI', align: 'center', position: '0 0.6 0', color: '#FFF', width: '3' } as any)} />\r\n          <a-animation {...({ attribute: 'rotation', dur: '10000', to: '0 360 0', repeat: 'indefinite', easing: 'linear' } as any)}></a-animation>\r\n          <a-animation {...({ attribute: 'scale', dur: '3000', direction: 'alternate', to: '1.1 1.1 1.1', repeat: 'indefinite', easing: 'ease-in-out-sine' } as any)}></a-animation>\r\n        </a-box>\r\n        <a-sphere id=\"DTC-entity\" className=\"interactable\" {...({ position: componentsData.DTC.position, scale: componentsData.DTC.scale, color: componentsData.DTC.color, shadow: true } as any)}>\r\n          <a-text {...({ value: 'DTC', align: 'center', position: '0 0.5 0', color: '#000', width: '2' } as any)} />\r\n          <a-animation {...({ attribute: 'rotation', dur: '8000', to: '0 -360 0', repeat: 'indefinite', easing: 'linear' } as any)}></a-animation>\r\n        </a-sphere>\r\n        <a-octahedron id=\"UIH-entity\" className=\"interactable\" {...({ position: componentsData.UIH.position, scale: componentsData.UIH.scale, color: componentsData.UIH.color, shadow: true } as any)}>\r\n          <a-text {...({ value: 'UI Hive', align: 'center', position: '0 0.7 0', color: '#FFF', width: '2.5' } as any)} />\r\n          <a-animation {...({ attribute: 'rotation', dur: '12000', to: '360 360 0', repeat: 'indefinite', easing: 'linear' } as any)}></a-animation>\r\n        </a-octahedron>\r\n        <a-cylinder id=\"CBQA-E-entity\" className=\"interactable\" {...({ position: componentsData.CBQA_E.position, scale: componentsData.CBQA_E.scale, color: componentsData.CBQA_E.color, shadow: true } as any)}>\r\n          <a-text {...({ value: 'CBQA-E', align: 'center', position: '0 0.85 0', color: '#FFF', width: '2.5' } as any)} />\r\n          <a-animation {...({ attribute: 'rotation', dur: '15000', to: '0 360 0', repeat: 'indefinite', easing: 'linear' } as any)}></a-animation>\r\n        </a-cylinder>\r\n        <a-box id=\"Odyssey1-entity\" className=\"interactable\" {...({ position: componentsData.Odyssey1.position, scale: componentsData.Odyssey1.scale, color: componentsData.Odyssey1.color, shadow: true } as any)}>\r\n          <a-text {...({ value: 'Odyssey-1', align: 'center', position: '0 1.1 0', color: '#FFF', width: '4' } as any)} />\r\n        </a-box>\r\n        <a-plane id=\"ExternalReality-entity\" className=\"interactable\" {...({ position: '0 0 -4', rotation: '-90 0 0', width: '20', height: '20', color: '#444', material: 'shader: grid; colorGrid: #222' } as any)}></a-plane>\r\n        <a-entity {...({ line: `start: ${componentsData.QPAI.position}; end: ${componentsData.DTC.position}; color: ${componentsData.DTC.color}; opacity: 0.7` } as any)}></a-entity>\r\n        <a-entity {...({ line: `start: ${componentsData.QPAI.position}; end: ${componentsData.UIH.position}; color: ${componentsData.UIH.color}; opacity: 0.7` } as any)}></a-entity>\r\n        <a-entity {...({ line: `start: ${componentsData.QPAI.position}; end: ${componentsData.CBQA_E.position}; color: ${componentsData.CBQA_E.color}; opacity: 0.7` } as any)}></a-entity>\r\n        <a-entity {...({ line: `start: ${componentsData.QPAI.position}; end: ${componentsData.Odyssey1.position}; color: ${componentsData.Odyssey1.color}; opacity: 0.8;` } as any)}></a-entity>\r\n        <a-entity {...({ line: 'start: 0 0.1 -4; end: 0 1.6 -3; color: #A9A9A9; opacity: 0.4;' } as any)}></a-entity>\r\n      </a-scene>\r\n      {activeComponent && (\r\n        <div\r\n          ref={infoPanelRef}\r\n          className=\"absolute top-0 left-0 w-full h-full bg-black/70 backdrop-blur-sm flex items-center justify-center p-4 z-10\"\r\n          onClick={() => setActiveComponent(null)}\r\n        >\r\n          <div className=\"info-panel rounded-lg shadow-2xl p-6 max-w-xl w-full text-gray-100 relative\" onClick={e => e.stopPropagation()}>\r\n            <h2 className=\"text-2xl font-bold text-purple-400 mb-4\">{componentsData[activeComponent].title}</h2>\r\n            <p className=\"text-gray-300 mb-4 text-sm\">{componentsData[activeComponent].description}</p>\r\n            {componentsData[activeComponent].subComponents && (\r\n              <div className=\"mt-4 max-h-60 overflow-y-auto pr-2\">\r\n                <h3 className=\"font-semibold text-lg text-purple-500 mb-2\">Key Aspects:</h3>\r\n                <ul className=\"list-disc list-inside space-y-2 text-sm\">\r\n                  {componentsData[activeComponent].subComponents.map((sub, index) => (\r\n                    <li key={index} className=\"text-gray-300\">\r\n                      <span className=\"font-medium text-gray-100\">{sub.name}:</span> {sub.desc}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            <button\r\n              className=\"absolute top-4 right-4 px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded-full shadow-md transition-colors duration-200\"\r\n              onClick={() => setActiveComponent(null)}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"
}