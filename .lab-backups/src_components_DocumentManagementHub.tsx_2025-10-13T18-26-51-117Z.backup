{
  "originalPath": "src\\components\\DocumentManagementHub.tsx",
  "timestamp": "2025-10-13T18:26:51.117Z",
  "hash": "483c366902797b4850b12d842761d07d25e9681ce10f333f0526df8e4dc787c2",
  "size": 10485,
  "content": "import { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { supabase } from '@/lib/supabase';\r\nimport {\r\n    Calendar,\r\n    Download,\r\n    Edit,\r\n    Eye,\r\n    FileText,\r\n    Filter,\r\n    FolderOpen,\r\n    Search,\r\n    Share,\r\n    Star,\r\n    Tag,\r\n    Trash2,\r\n    Upload,\r\n    User\r\n} from 'lucide-react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from './AuthProvider';\r\n\r\ninterface Document {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  size: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  author: string;\r\n  tags: string[];\r\n  category: string;\r\n  starred: boolean;\r\n  shared: boolean;\r\n}\r\n\r\ninterface Folder {\r\n  id: string;\r\n  name: string;\r\n  document_count: number;\r\n  created_at: string;\r\n}\r\n\r\nexport const DocumentManagementHub: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [documents, setDocuments] = useState<Document[]>([]);\r\n  const [folders, setFolders] = useState<Folder[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('list');\r\n\r\n\r\n  useEffect(() => {\r\n    loadDocuments();\r\n    loadFolders();\r\n  }, []);\r\n\r\n  const loadDocuments = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('documents')\r\n        .select('*')\r\n        .order('updated_at', { ascending: false });\r\n      if (error) throw error;\r\n      setDocuments(data || []);\r\n    } catch (error) {\r\n      console.error('Failed to load documents:', error);\r\n      setDocuments([]);\r\n    }\r\n  };\r\n\r\n  const loadFolders = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('folders')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n      if (error) throw error;\r\n      setFolders(data || []);\r\n    } catch (error) {\r\n      console.error('Failed to load folders:', error);\r\n      setFolders([]);\r\n    }\r\n  };\r\n\r\n  const filteredDocuments = documents.filter(doc => {\r\n    const matchesSearch = doc.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                         doc.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));\r\n    const matchesCategory = selectedCategory === 'all' || doc.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const getFileIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'pdf': return 'üìÑ';\r\n      case 'docx': return 'üìù';\r\n      case 'xlsx': return 'üìä';\r\n      case 'txt': return 'üìã';\r\n      default: return 'üìÑ';\r\n    }\r\n  };\r\n\r\n  const categories = ['all', 'research', 'technical', 'finance', 'meetings'];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">Document Management</h2>\r\n          <p className=\"text-muted-foreground\">Organize and manage your documents</p>\r\n        </div>\r\n        <Button className=\"flex items-center gap-2\">\r\n          <Upload className=\"h-4 w-4\" />\r\n          Upload Document\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex gap-4 items-center\">\r\n            <div className=\"flex-1 relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n              <Input\r\n                placeholder=\"Search documents...\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Filter className=\"h-4 w-4\" />\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"px-3 py-2 border rounded-md\"\r\n              >\r\n                {categories.map(cat => (\r\n                  <option key={cat} value={cat}>\r\n                    {cat.charAt(0).toUpperCase() + cat.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        {/* Sidebar */}\r\n        <div className=\"space-y-4\">\r\n          {/* Quick Stats */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-sm\">Storage Overview</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-sm\">Used</span>\r\n                <span className=\"text-sm font-medium\">4.2 GB</span>\r\n              </div>\r\n              <div className=\"w-full bg-muted h-2 rounded-full\">\r\n                <div className=\"bg-blue-500 h-2 rounded-full\" style={{ width: '42%' }}></div>\r\n              </div>\r\n              <div className=\"text-xs text-muted-foreground\">4.2 GB of 10 GB used</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Folders */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-sm flex items-center gap-2\">\r\n                <FolderOpen className=\"h-4 w-4\" />\r\n                Folders\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-0\">\r\n              <ScrollArea className=\"h-48\">\r\n                <div className=\"space-y-1 p-3\">\r\n                  {folders.map(folder => (\r\n                    <div key={folder.id} className=\"flex items-center justify-between p-2 hover:bg-muted/50 rounded cursor-pointer\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <FolderOpen className=\"h-4 w-4 text-blue-500\" />\r\n                        <span className=\"text-sm\">{folder.name}</span>\r\n                      </div>\r\n                      <Badge variant=\"secondary\" className=\"text-xs\">\r\n                        {folder.document_count}\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"lg:col-span-3\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <FileText className=\"h-5 w-5\" />\r\n                  Documents ({filteredDocuments.length})\r\n                </CardTitle>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    variant={viewMode === 'list' ? 'default' : 'outline'}\r\n                    size=\"sm\"\r\n                    onClick={() => setViewMode('list')}\r\n                  >\r\n                    List\r\n                  </Button>\r\n                  <Button\r\n                    variant={viewMode === 'grid' ? 'default' : 'outline'}\r\n                    size=\"sm\"\r\n                    onClick={() => setViewMode('grid')}\r\n                  >\r\n                    Grid\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent className=\"p-0\">\r\n              <ScrollArea className=\"h-96\">\r\n                <div className=\"space-y-2 p-4\">\r\n                  {filteredDocuments.map(doc => (\r\n                    <div key={doc.id} className=\"flex items-center gap-4 p-3 border rounded-lg hover:bg-muted/50\">\r\n                      <div className=\"text-2xl\">{getFileIcon(doc.type)}</div>\r\n                       <div className=\"flex-1\">\r\n                         <div className=\"flex items-center gap-2\">\r\n                           <h4 className=\"font-medium\">{doc.name}</h4>\r\n                           {doc.starred && <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />}\r\n                           {doc.shared && <Share className=\"h-4 w-4 text-blue-500\" />}\r\n                         </div>\r\n                         <div className=\"flex items-center gap-4 text-sm text-muted-foreground mt-1\">\r\n                           <span className=\"flex items-center gap-1\">\r\n                             <User className=\"h-3 w-3\" />\r\n                             {doc.author}\r\n                           </span>\r\n                           <span className=\"flex items-center gap-1\">\r\n                             <Calendar className=\"h-3 w-3\" />\r\n                             {new Date(doc.updated_at).toLocaleDateString()}\r\n                           </span>\r\n                           <span>{doc.size}</span>\r\n                         </div>\r\n                         <div className=\"flex gap-1 mt-2\">\r\n                           {doc.tags.map(tag => (\r\n                             <Badge key={tag} variant=\"outline\" className=\"text-xs\">\r\n                               <Tag className=\"h-2 w-2 mr-1\" />\r\n                               {tag}\r\n                             </Badge>\r\n                           ))}\r\n                         </div>\r\n                       </div>\r\n                       <div className=\"flex gap-1\">\r\n                         <Button variant=\"ghost\" size=\"sm\">\r\n                           <Eye className=\"h-4 w-4\" />\r\n                         </Button>\r\n                         <Button variant=\"ghost\" size=\"sm\">\r\n                           <Edit className=\"h-4 w-4\" />\r\n                         </Button>\r\n                         <Button variant=\"ghost\" size=\"sm\">\r\n                           <Download className=\"h-4 w-4\" />\r\n                         </Button>\r\n                         <Button variant=\"ghost\" size=\"sm\">\r\n                           <Trash2 className=\"h-4 w-4\" />\r\n                         </Button>\r\n                       </div>\r\n                     </div>\r\n                   ))}\r\n                 </div>\r\n               </ScrollArea>\r\n             </CardContent>\r\n           </Card>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default DocumentManagementHub;"
}