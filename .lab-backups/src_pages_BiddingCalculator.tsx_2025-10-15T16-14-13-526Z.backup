{
  "originalPath": "src\\pages\\BiddingCalculator.tsx",
  "timestamp": "2025-10-15T16:14:13.526Z",
  "hash": "07d73e2c85a2d0380852b61453a0c952f1414743afbaf580d9de299f18a309b3",
  "size": 3018,
  "content": "import React, { useState } from 'react';\r\nimport VerticalNavigation from '@/components/VerticalNavigation';\r\nimport SimpleBidderForm, {\r\n  BidderInfo,\r\n  ServiceSpecs,\r\n} from '@/components/SimpleBidderForm';\r\nimport OdysseyPricingEngine from '@/components/OdysseyPricingEngine';\r\nimport DocumentViewer from '@/components/DocumentViewer';\r\nimport PDFExporter from '@/components/PDFExporter';\r\nimport AppointmentWidget from '@/components/AppointmentWidget';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Calculator, Shield, Users } from 'lucide-react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// This should be initialized from your central Supabase client instance\r\nconst supabase = createClient(\r\n  import.meta.env.VITE_SUPABASE_URL!,\r\n  import.meta.env.VITE_SUPABASE_ANON_KEY!\r\n);\r\n\r\n// --- Type Definitions ---\r\ntype CalculationInputs = {\r\n  materialCost: number;\r\n  laborHours: number;\r\n  overheadRate: number;\r\n  profitMargin: number;\r\n};\r\ntype BidSubmission = {\r\n  bid_amount: number;\r\n  calculation_inputs: CalculationInputs;\r\n  title: string;\r\n  status: 'draft' | 'submitted' | 'won' | 'lost';\r\n};\r\n\r\nconst BiddingCalculator: React.FC = () => {\r\n  // --- Bidding Calculator State and Logic ---\r\n  const [inputs, setInputs] = useState<CalculationInputs>({\r\n    materialCost: 0,\r\n    laborHours: 0,\r\n    overheadRate: 15,\r\n    profitMargin: 20,\r\n  });\r\n  const [bidAmount, setBidAmount] = useState<number | null>(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n\r\n  const calculateBid = () => {\r\n    const totalCost = inputs.materialCost + inputs.laborHours * 50;\r\n    const costWithOverhead = totalCost * (1 + inputs.overheadRate / 100);\r\n    const finalBid = costWithOverhead * (1 + inputs.profitMargin / 100);\r\n    setBidAmount(parseFloat(finalBid.toFixed(2)));\r\n  };\r\n\r\n  const handleSaveBid = async () => {\r\n    if (bidAmount === null) {\r\n      setError('Please calculate a bid before saving.');\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n    const submissionData: BidSubmission = {\r\n      title: 'New Calculated Bid',\r\n      status: 'draft',\r\n      bid_amount: bidAmount,\r\n      calculation_inputs: inputs,\r\n    };\r\n    const { error: insertError } = await supabase\r\n      .from('bids')\r\n      .insert([submissionData]);\r\n    setIsSaving(false);\r\n    if (insertError) {\r\n      console.error('Error saving bid:', insertError);\r\n      setError(`Failed to save bid: ${insertError.message}`);\r\n    } else {\r\n      setSuccessMessage('Bid successfully saved!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='p-4'>\r\n      {/* ...existing UI for the bidding calculator... */}\r\n      {/* Add your form, calculation, and save UI here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiddingCalculator;\r\n"
}