{
  "originalPath": "src\\components\\OdysseyOrbHiveVRDemo.tsx",
  "timestamp": "2025-10-15T16:14:10.234Z",
  "hash": "c7c4217151a393888a67061e60358a663f8b31a5f9539e3d8d000149c47c31bf",
  "size": 9384,
  "content": "import React, { useRef, useEffect, useState, useMemo } from 'react';\r\n\r\n// Orb + Hive VR Demo for Odyssey-1\r\n// Requires aframe in index.html\r\n\r\n\r\n\r\n\r\nexport default function OdysseyOrbHiveVRDemo() {\r\n  const [active, setActive] = useState(null);\r\n  const [aframeReady, setAframeReady] = useState(false);\r\n  const infoPanelRef = useRef(null);\r\n  // Bee orbs: animate 3 bees in a circle around the hive\r\n  const beeOrbs = useMemo(() => [\r\n    { id: 'bee-1', color: '#ffe600', delay: 0 },\r\n    { id: 'bee-2', color: '#ffd700', delay: 800 },\r\n    { id: 'bee-3', color: '#fff700', delay: 1600 },\r\n  ], []);\r\n\r\n  // Dynamically load A-Frame only once on mount\r\n  useEffect(() => {\r\n    if ((window as any).AFRAME) {\r\n      setAframeReady(true);\r\n      return;\r\n    }\r\n    const script = document.createElement('script');\r\n    script.src = 'https://aframe.io/releases/1.5.0/aframe.min.js';\r\n    script.async = true;\r\n    script.onload = () => setAframeReady(true);\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      if (script.parentNode) script.parentNode.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!aframeReady) return;\r\n    if (active && infoPanelRef.current) {\r\n      infoPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  }, [active, aframeReady]);\r\n\r\n  useEffect(() => {\r\n    if (!aframeReady) return;\r\n    // Attach click handlers after scene is rendered\r\n  // Custom A-Frame component for a dynamic star swarm (galaxy/hive)\r\n    const handleClick = (id) => () => setActive(id);\r\n    const interval = setInterval(() => {\r\n      const sceneEl = document.querySelector('a-scene');\r\n      if (!sceneEl) return;\r\n      // Central orb\r\n      const core = sceneEl.querySelector('#ai-orb');\r\n      if (core) core.addEventListener('click', handleClick('ai-orb'));\r\n      // Small orb\r\n      const small = sceneEl.querySelector('#orbit-orb');\r\n      if (small) small.addEventListener('click', handleClick('orbit-orb'));\r\n      // Bees\r\n      beeOrbs.forEach((bee, i) => {\r\n        const beeEl = sceneEl.querySelector(`#${bee.id}`);\r\n        if (beeEl) beeEl.addEventListener('click', handleClick(bee.id));\r\n      });\r\n      clearInterval(interval);\r\n    }, 500);\r\n    return () => {\r\n      const sceneEl = document.querySelector('a-scene');\r\n      if (!sceneEl) return;\r\n      const core = sceneEl.querySelector('#ai-orb');\r\n      if (core) core.replaceWith(core.cloneNode(true));\r\n      const small = sceneEl.querySelector('#orbit-orb');\r\n      if (small) small.replaceWith(small.cloneNode(true));\r\n      beeOrbs.forEach((bee) => {\r\n        const beeEl = sceneEl.querySelector(`#${bee.id}`);\r\n        if (beeEl) beeEl.replaceWith(beeEl.cloneNode(true));\r\n      });\r\n    };\r\n  }, [aframeReady, beeOrbs]);\r\n\r\n  if (!aframeReady) {\r\n    return (\r\n      <div className=\"relative w-full h-[70vh] flex items-center justify-center bg-black/60 rounded-xl my-12 shadow-2xl border border-blue-400/30\">\r\n        <span className=\"text-blue-300 text-lg animate-pulse\">Loading VR experience...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full h-[70vh] overflow-hidden rounded-xl my-12 shadow-2xl border border-blue-400/30\">\r\n      <a-scene {...({ embedded: true, style: { width: '100%', height: '100%' } } as any)}>\r\n        {/* Cosmic background */}\r\n        <a-sky {...({ color: '#0a0026' } as any)}></a-sky>\r\n          {/* Central Blue AI Core Orb */}\r\n          <a-sphere\r\n            {...({\r\n              position: '0 1.6 -3',\r\n              radius: 0.38,\r\n              color: '#3bb9ff',\r\n              emissive: '#1a4d99',\r\n              emissiveIntensity: 0.7,\r\n              ['segments-width']: 48,\r\n              ['segments-height']: 48,\r\n              material: 'shader: standard; metalness: 0.8; roughness: 0.15; opacity: 0.98; transparent: true;'\r\n            } as any)}\r\n          >\r\n            <a-animation {...({\r\n              attribute: 'material.emissiveIntensity',\r\n              direction: 'alternate',\r\n              dur: 2200,\r\n              to: 1.0,\r\n              from: 0.7,\r\n              repeat: 'indefinite',\r\n              easing: 'ease-in-out'\r\n            } as any)} />\r\n          </a-sphere>\r\n        {/* Hive: static, softly glowing star field */}\r\n          <a-entity\r\n            {...({\r\n              particleSystem: 'preset: snow; color: #fff, #b3e6ff, #a18fff, #6e4cff; size: 0.028; count: 2200; positionSpread: 5.5 2.2 5.5; randomizePosition: true; opacity: 0.82; direction: 0; accelerationValue: 0 0 0; texture: /star.png;',\r\n              position: '0 1.6 -3',\r\n              rotation: '0 0 0',\r\n              animation: 'property: rotation; to: 0 360 0; loop: true; dur: 48000; easing: linear'\r\n            } as any)}\r\n          ></a-entity>\r\n          {/* Twinkling effect overlay for galaxy */}\r\n          <a-animation\r\n            {...({\r\n              attribute: 'components.particlesystem.material.uniforms.opacity.value',\r\n              direction: 'alternate',\r\n              dur: 2100,\r\n              to: 0.48,\r\n              from: 0.82,\r\n              repeat: 'indefinite',\r\n              easing: 'ease-in-out'\r\n            } as any)}\r\n          />\r\n          {/* Orbiting Data Orb (planet-like) */}\r\n          <a-entity\r\n            {...({\r\n              id: 'orbiting-orb',\r\n              animation: 'property: position; dir: alternate; loop: true; dur: 12000; to: 1.2 2.1 -3; from: -1.2 1.1 -3'\r\n            } as any)}\r\n          >\r\n            <a-sphere\r\n              {...({\r\n                radius: 0.13,\r\n                color: '#ffe600',\r\n                emissive: '#fffbe6',\r\n                emissiveIntensity: 0.5,\r\n                'segments-width': 32,\r\n                'segments-height': 32,\r\n                material: 'shader: standard; metalness: 0.6; roughness: 0.3; opacity: 0.95; transparent: true;'\r\n              } as any)}\r\n            >\r\n              <a-animation {...({\r\n                attribute: 'material.emissiveIntensity',\r\n                direction: 'alternate',\r\n                dur: 1800,\r\n                to: 0.8,\r\n                from: 0.5,\r\n                repeat: 'indefinite',\r\n                easing: 'ease-in-out'\r\n              } as any)} />\r\n            </a-sphere>\r\n          </a-entity>\r\n        {/* Animated bee orbs (smaller, yellow, orbiting hive) */}\r\n        {beeOrbs.map((bee, i) => (\r\n          <a-entity\r\n            key={bee.id}\r\n            id={bee.id}\r\n            className=\"interactable\"\r\n            {...({\r\n              position: '0 1.6 -3',\r\n              animation: `property: rotation; to: 0 360 0; loop: true; dur: 3500; delay: ${bee.delay}; easing: linear`\r\n            } as any)}\r\n          >\r\n            <a-sphere\r\n              {...({\r\n                position: '2.0 0 0',\r\n                radius: '0.07',\r\n                material: `color: ${bee.color}; emissive: #fff700; emissiveIntensity: 0.9; metalness: 0.7; roughness: 0.2; opacity: 0.98; transparent: true; shader: standard`,\r\n                shadow: true\r\n              } as any)}\r\n            />\r\n          </a-entity>\r\n        ))}\r\n        {/* Small orb orbiting the core */}\r\n        <a-entity\r\n          id=\"orbit-orb\"\r\n          className=\"interactable\"\r\n          {...({\r\n            position: '0 1.6 -3',\r\n            animation: 'property: rotation; to: 0 360 0; loop: true; dur: 4000; easing: linear'\r\n          } as any)}\r\n        >\r\n          <a-sphere\r\n            {...({\r\n              position: '1.2 0 0',\r\n              radius: '0.18',\r\n              material: 'color: #ffe600; emissive: #ffe600; emissiveIntensity: 0.8; metalness: 0.7; roughness: 0.2; opacity: 0.98; transparent: true; shader: standard',\r\n              shadow: true\r\n            } as any)}\r\n          />\r\n        </a-entity>\r\n        {/* Holographic grid floor */}\r\n        <a-grid {...({ color: '#00fff7', opacity: '0.12', width: '30', height: '30', position: '0 0 -4', rotation: '-90 0 0' } as any)}></a-grid>\r\n      </a-scene>\r\n      {active && (\r\n        <div\r\n          ref={infoPanelRef}\r\n          className=\"absolute top-0 left-0 w-full h-full bg-black/80 backdrop-blur-sm flex items-center justify-center p-4 z-10\"\r\n          onClick={() => setActive(null)}\r\n        >\r\n          <div className=\"info-panel rounded-lg shadow-2xl p-6 max-w-xl w-full text-gray-100 relative\" onClick={e => e.stopPropagation()}>\r\n            <h2 className=\"text-2xl font-bold text-blue-400 mb-4\">\r\n              {active === 'ai-orb' && 'Odyssey-1 AI Core'}\r\n              {active.startsWith('hive-') && 'The Hive Node'}\r\n              {active === 'orbit-orb' && 'Orbiting Data Node'}\r\n            </h2>\r\n            <p className=\"text-gray-300 mb-4 text-sm\">\r\n              {active === 'ai-orb' && 'The central intelligence of Odyssey-1, glowing with quantum power.'}\r\n              {active.startsWith('hive-') && 'A node in the self-evolving Hive, supporting the AI core.'}\r\n              {active === 'orbit-orb' && 'A data or business process, always in motion around the core.'}\r\n            </p>\r\n            <button\r\n              className=\"absolute top-4 right-4 px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-md transition-colors duration-200\"\r\n              onClick={() => setActive(null)}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"
}