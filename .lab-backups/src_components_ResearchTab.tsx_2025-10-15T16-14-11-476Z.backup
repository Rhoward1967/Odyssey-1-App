{
  "originalPath": "src\\components\\ResearchTab.tsx",
  "timestamp": "2025-10-15T16:14:11.476Z",
  "hash": "b449ab2e91f267170e8d03ca05ba68da8b3023ee658f122c42d4cbc9f1ea076c",
  "size": 3244,
  "content": "import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Search } from 'lucide-react';\r\n\r\nconst ResearchTab: React.FC = () => {\r\n  const [input, setInput] = useState('');\r\n  const [result, setResult] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [provider, setProvider] = useState<'huggingface' | 'openai' | 'anthropic' | 'gemini'>('huggingface');\r\n\r\n  // Example: Hugging Face sentiment analysis\r\n  const analyzeWithHuggingFace = async (text: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const apiKey = import.meta.env.VITE_HUGGINGFACE_API_KEY;\r\n      const res = await fetch('https://api-inference.huggingface.co/models/distilbert-base-uncased-finetuned-sst-2-english', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${apiKey}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ inputs: text })\r\n      });\r\n      const data = await res.json();\r\n      setResult(JSON.stringify(data, null, 2));\r\n    } catch (err) {\r\n      setResult('Error connecting to Hugging Face API.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Placeholder for other providers\r\n  const analyze = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    if (provider === 'huggingface') {\r\n      await analyzeWithHuggingFace(input);\r\n    } else {\r\n      setResult('Provider not yet implemented.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"bg-white border-blue-100 shadow\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Search className=\"w-5 h-5 text-blue-600\" />\r\n          Research & Sentiment Analysis\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form onSubmit={analyze} className=\"flex gap-2 mb-4\">\r\n          <input\r\n            className=\"flex-1 rounded border border-blue-200 px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-300\"\r\n            placeholder=\"Enter news headline, tweet, or text...\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n          <select\r\n            className=\"rounded border border-blue-200 px-2 py-1 text-xs\"\r\n            value={provider}\r\n            onChange={e => setProvider(e.target.value as any)}\r\n            disabled={loading}\r\n          >\r\n            <option value=\"huggingface\">Hugging Face</option>\r\n            <option value=\"openai\">OpenAI</option>\r\n            <option value=\"anthropic\">Anthropic</option>\r\n            <option value=\"gemini\">Gemini</option>\r\n          </select>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-600 text-white px-3 py-1 rounded disabled:opacity-50\"\r\n            disabled={loading || !input.trim()}\r\n          >\r\n            {loading ? 'Analyzing...' : 'Analyze'}\r\n          </button>\r\n        </form>\r\n        {result && (\r\n          <pre className=\"bg-gray-50 p-2 rounded text-xs overflow-x-auto max-h-48 mt-2 border border-gray-100\">{result}</pre>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResearchTab;\r\n"
}